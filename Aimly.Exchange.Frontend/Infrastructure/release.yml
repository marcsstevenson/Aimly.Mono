resources:
  pipelines:
  - pipeline: AimlyExchangeFrontend
    source: AimlyExchangeFrontendBuild
    trigger:
      branches:
      - dev
      - test
      - prod

# Exclude CI from the repository because we only want to use the resource trigger above
trigger:
  branches:
    exclude:
      - '*'

# We do not want pull requests to trigger the release
pr:
  branches:
    exclude:
      - '*'

variables:
  product-name: 'Exchange'
  environment: '$(Build.SourceBranchName)' # Alter this as needed if we want to have multiple environments per branch. eg test-2
  # This is the Azure connection that is specific for the environment. Some tasks to not have subscription Ids :/
  target-resource-group: '$(workspace_name)-$(product-name)-$(environment)' # Where the resources will be deployed
  target-web-app: '$(workspace_name)-$(product-name)-$(environment)' # The name of the application to deploy
  # This is the Azure connection that has access to all environments. Some tasks to have subscription Ids :)
  azure-resource-manager-connection: 'DevEnvironment' # This is the connection for all subscriptions
  shared-key-vault: 'Ludily-Shared-$(environment)'
  workspace_name: 'Aimly'
  workspace_resource_group: 'Ludily-Shared-$(environment)'
  artifact-name: 'artifact_$(environment)'

stages:
- stage: Deploy
  jobs:
  - job: Deploy
    displayName: Deploy to Blob Storage - aimlyexchangefrontend
    pool:
      vmImage: windows-latest
    steps:
    - checkout: none # Don't check out any git repos

    # Get values from key vault
    # The purpose of this task is to get all keys from the environment's shared key vault and use these to populate the product's key vault
    # Note that the deployment-project secret value is used in further steps
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: '$(azure-resource-manager-connection)'
        KeyVaultName: '$(shared-key-vault)'
        SecretsFilter: '*'
        RunAsPreJob: true

    # We should now have access to these variables that have been populated from the shared Key Vault
    #
    # deployment-project
    # deployment-location
    # deployment-subscription-Id

    # Output all environment variables for debugging purposes
    - task: PowerShell@2
      displayName: 'Display all environment variables'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "deployment-project - $DEPLOYMENT_PROJECT"

          Write-Host "List all environment variables"

          gci env:

    # Download the finished artifact from the build pipeline
    - task: DownloadPipelineArtifact@2
      displayName: Download Build Pipeline Artifact
      inputs:
        buildType: 'specific'
        project: '$(deployment-project)' # Get this using https://dev.azure.com/ludily/_apis/projects?api-version=6.0
        pipeline: 'AimlyExchangeFrontendBuild'
        preferTriggeringPipeline: true
        buildVersionToDownload: 'latestFromBranch'
        branchName: '$(Build.SourceBranch)'
        targetPath: '$(System.ArtifactsDirectory)'

    # - task: FileTransform@1
    #   displayName: 'Environment Configuration'

    #   inputs:
    #     folderPath: '$(System.DefaultWorkingDirectory)/_Ludily.Main/dist/home-site'
    #     fileType: json
    #     targetFiles: assets/config.json

    # - task: AzureCLI@2
    #   displayName: 'Delete existing files from $web'
    #   inputs:
    #     azureSubscription: '$(azure-resource-manager-connection)'
    #     scriptType: 'ps'
    #     scriptLocation: inlineScript
    #     inlineScript: az storage blob delete-batch --account-name aimlyexchangefrontend --auth-mode key -s '$web'


    - task: CmdLine@2
      displayName: 'List directories for debugging'
      inputs:
        script: |
          echo List the root dir
          dir

          echo Change to $(System.ArtifactsDirectory)
          cd $(System.ArtifactsDirectory)

          echo $(System.ArtifactsDirectory)
          dir

          echo artifact contents
          cd $(artifact-name)
          dir

          echo build contents
          cd build
          dir

    - task: AzureCLI@2
      displayName: Upload to blob storage
      inputs:
        azureSubscription: 'DevEnvironment'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: az storage blob upload-batch --account-name aimlyexchangefrontend  --auth-mode key -d '$web' -s $(System.ArtifactsDirectory)\$(artifact-name)

    # - task: AzureFileCopy@4
    #   inputs:
    #     SourcePath: '$(System.ArtifactsDirectory)\$(artifact-name)'
    #     azureSubscription: '$(azure-resource-manager-connection)'
    #     Destination: 'AzureBlob'
    #     storage: 'aimlyexchangefrontend'
    #     ContainerName: 'blah'

    - task: AzureCLI@2
      displayName: Purge CDN endpoint
      inputs:
        azureSubscription: 'DevEnvironment'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: az cdn endpoint purge --content-paths  "/*" --profile-name aimlyexchangefrontendstatic --name aimlyexchangefrontendstatic --resource-group $(target-resource-group)
